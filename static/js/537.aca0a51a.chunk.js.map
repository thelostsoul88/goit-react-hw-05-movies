{"version":3,"file":"static/js/537.aca0a51a.chunk.js","mappings":"8PAEAA,EAAAA,EAAAA,SAAAA,QAAyB,8BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,oCAGX,IAAMC,EAAiB,mCAAG,WAAMC,GAAN,yFACDH,EAAAA,EAAAA,IAAA,kBAAqBG,EAArB,cADC,uBAChBC,EADgB,EAChBA,KADgB,kBAEjBA,GAFiB,2CAAH,sDAKvB,I,SC8BA,EApCgB,WACd,IAAQD,GAAYE,EAAAA,EAAAA,MAAZF,QACR,GAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,+GAE6BP,EAAkBC,GAF/C,gBAEWO,EAFX,EAEWA,QACRF,EAAWE,GAHd,gDAKGC,EAAAA,GAAAA,MAAA,UACK,KAAMC,QADX,8CALH,wDAAD,EAUD,GAAE,CAACT,KAGF,iBAAKU,UAAU,OAAf,WACE,eAAIA,UAAU,8BAAd,qBACCN,EAAQO,OAAS,GAChB,wBACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,gBAAaL,UAAU,OAAvB,WACE,gBAAIA,UAAU,YAAd,qBAAmCG,MACnC,uBAAIC,MAFGC,EADE,OAQf,cAAGL,UAAU,YAAb,uDAIP,C","sources":["services/reviews-movies-api.js","pages/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/';\naxios.defaults.params = {\n  api_key: '11546a486a09144867cb90a93b48d542',\n};\n\nconst fetchReviewsMovie = async movieId => {\n  const { data } = await axios.get(`3/movie/${movieId}/reviews?`);\n  return data;\n};\n\nexport default fetchReviewsMovie;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport fetchReviewsMovie from 'services/reviews-movies-api';\n// import css from './Pages.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { results } = await fetchReviewsMovie(movieId);\n        setReviews(results);\n      } catch (error) {\n        toast.error(\n          `${error.message}. Movies loading failed, please try again`\n        );\n      }\n    })();\n  }, [movieId]);\n\n  return (\n    <div className=\"ml-5\">\n      <h2 className=\"font-bold mt-3 text-xl mb-3\">Reviews</h2>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <li key={id} className=\"mb-3\">\n              <h3 className=\"font-bold\">Author: {author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"mt-5 mb-5\">We dont have any reviews for this movie</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","api_key","fetchReviewsMovie","movieId","data","useParams","useState","reviews","setReviews","useEffect","results","toast","message","className","length","map","author","content","id"],"sourceRoot":""}